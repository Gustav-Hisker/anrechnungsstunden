---
import DefaultLayout from "../layouts/DefaultLayout.astro";
---

<DefaultLayout title="OTP Anmeldung">
    <div class="hero">
        <form class="frm frm-wide" id="login-frm">
            <h1 id="header">Anmeldung</h1>
            <div class="frm-group">
                <label for="username">Kürzel / Email:</label>
                <input
                    class="inpt"
                    type="text"
                    id="username"
                    name="username"
                    required
                />
                <span id="usernameMsg" class="error-message text-alert"></span>
            </div>
            <button type="submit" class="btn btn-wide btn-alert">Log In</button>
        </form>
        <a href="/admin/login" id="toggleAdmin">Zur Admin Anmeldung</a>
    </div>
</DefaultLayout>

<style scoped>
    .error-message {
        min-height: 1.6rem;
    }

    button {
        margin-bottom: 1rem;
    }

    .hidden {
        display: none;
    }

    #toggleAdmin {
        cursor: pointer;
        color: #747474;
        text-decoration: none;
    }
</style>

<script>
    import Swal from "sweetalert2";
    import type { OTPResponse } from "pocketbase";
    import {
        loginOTP,
        logout,
        pb,
        redirectLoggedIn,
        requestOTP,
    } from "../pocketbase";
    import { toast } from "../toast";

    const loginFrm = document.getElementById("login-frm") as HTMLFormElement;
    const unameInpt = loginFrm.querySelector("#username") as HTMLInputElement;
    const loginBtn = loginFrm.querySelector("button") as HTMLButtonElement;

    const unameMsg = loginFrm.querySelector("#usernameMsg") as HTMLSpanElement;

    let otp_req: OTPResponse | null = null;

    const urlParams = new URLSearchParams(window.location.search);
    const req_id = urlParams.get("id");
    const otp = urlParams.get("otp");

    if (req_id && otp) {
        loginOTP(req_id, otp).then((ok) => {
            if (ok) {
                redirectLoggedIn();
            } else {
                toast("error", "Einmalpasswort falsch oder abgelaufen");
            }
        });
    }

    const popup = Swal.mixin({
        title: "Einmalpasswort",
        text: "Ein Einmalpasswort wurde an ihre Email gesendet, bitte geben Sie es hier ein",
        input: "text",
        inputPlaceholder: "Einmalpasswort",
        inputValidator: (value) => {
            if (!value) {
                return "Einmalpasswort darf nicht leer sein!";
            }
        },
    });

    function checkValid() {
        let valid = true;
        unameMsg.textContent = "";

        if (unameInpt.value.length < 3) {
            valid = false;
            unameMsg.textContent =
                "Das Kürzel muss mindestens 3 Zeichen lang sein";
        }

        if (unameInpt.value.indexOf(" ") !== -1) {
            valid = false;
            unameMsg.textContent =
                "Das Kürzel darf keine Leerzeichen enthalten";
        }

        markValid(valid);
    }

    /**
     * Marks the form as valid or invalid
     * @param {boolean} isValid - Whether the form is valid
     */
    function markValid(isValid: boolean) {
        if (isValid) {
            loginBtn.disabled = false;
            loginBtn.classList.remove("btn-alert");
            loginBtn.classList.add("btn-success");
        } else {
            loginBtn.disabled = true;
            loginBtn.classList.remove("btn-success");
            loginBtn.classList.add("btn-alert");
        }
    }

    async function submitForm(e: Event) {
        e.preventDefault();
        let uname = unameInpt.value.toLowerCase();
        if (uname.indexOf("@") === -1) {
            try {
                const data = await pb
                    .collection("emails")
                    .getFirstListItem(`acronym="${uname}"`, {});

                if (!data || !data.email) {
                    unameMsg.textContent =
                        "Kürzel nicht gefunden, bitte geben Sie Ihre E-Mail-Adresse ein";
                    markValid(false);
                    return;
                }
                uname = data.email;
            } catch (e) {
                console.error(e);
                unameMsg.textContent =
                    "Kürzel nicht gefunden, bitte geben Sie Ihre E-Mail-Adresse ein";
                markValid(false);
                return;
            }
        }

        otp_req = await requestOTP(uname);

        if (!otp_req || !otp_req.otpId) {
            unameMsg.textContent = "Kürzel / Email nicht gefunden";
            markValid(false);
            return;
        }

        const result = await popup.fire();
        if (result.isConfirmed) {
            const ok = await loginOTP(otp_req.otpId, result.value);
            if (ok) {
                redirectLoggedIn();
            } else {
                popup.close();
                toast("error", "Einmalpasswort falsch oder abgelaufen");
            }
        }
    }

    document.addEventListener("DOMContentLoaded", logout);
    document.addEventListener("DOMContentLoaded", checkValid);
    unameInpt.addEventListener("input", checkValid);
    loginFrm.addEventListener("submit", submitForm);
</script>
