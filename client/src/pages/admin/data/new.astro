---
import DefaultLayout from "@src/layouts/DefaultLayout.astro";
---

<DefaultLayout title="Halbjahresverwaltung">
    <div class="flex flex-col items-center justify-center w-full h-full">
        <h1 class="text-4xl font-bold text-center mb-8">
            Neuer Halbjahresabschluss
        </h1>

        <form class="form flex flex-col gap-8" id="frm">
            <label class="floating-label">
                <span>Jahr in dem das Schuljahr angefangen hat </span>

                <input
                    id="year"
                    type="number"
                    class="input input-xl w-lg validator"
                    required
                    placeholder="Jahr in dem das Schuljahr angefangen hat"
                    min="2000"
                    title="Das Jahr muss eine Zahl größer als 2000 sein"
                />
                <p class="label">z.B. 2025 für das Schuljahr 2025/26</p>
                <p class="validator-hint">
                    Das Jahr muss eine Zahl größer als 2000 sein
                </p>
            </label>

            <label class="floating-label">
                <span>Datum des ersten <b>Montags</b> im 2. Halbjahr</span>

                <input
                    id="splitDate"
                    type="text"
                    class="input input-xl w-lg"
                    required
                    placeholder="Datum des ersten Montags im 2. Halbjahr"
                    title="Datum des ersten Montags im 2. Halbjahr"
                />
                <p class="label">z.B. 9.2.2026</p>
            </label>

            <label class="floating-label">
                <span>Halbjahr</span>
                <select
                    id="semester"
                    class="select select-xl w-lg validator"
                    required
                >
                    <option disabled selected value="">Bitte Wählen:</option>
                    <option value="1">1. Halbjahr</option>
                    <option value="2">2. Halbjahr</option>
                </select>
                <p class="validator-hint">Required</p>
            </label>

            <fieldset class="fieldset">
                <legend class="fieldset-legend">Datei (csv / xls / xlsx)</legend
                >
                <input
                    type="file"
                    id="fileInput"
                    class="file-input file-input-xl w-lg validator"
                    accept="text/csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel"
                    required
                />
            </fieldset>

            <button type="submit" class="btn btn-xl w-lg btn-success">
                Halbjahresabschluss starten</button
            >
        </form>
    </div>
</DefaultLayout>

<script>
    import { parse } from "date-fns";
    import { formatDateToDDMMYYYY, pb } from "@src/pocketbase";
    import { toast } from "@src/toast";

    const form = document.getElementById("frm") as HTMLFormElement;
    const submitBtn = form.querySelector("button") as HTMLButtonElement;
    const yearInput = document.getElementById("year") as HTMLInputElement;
    const splitDateInput = document.getElementById(
        "splitDate",
    ) as HTMLInputElement;
    const semesterInput = document.getElementById(
        "semester",
    ) as HTMLSelectElement;

    const fileInput = document.getElementById("fileInput") as HTMLInputElement;

    function validate() {
        const year = parseInt(yearInput.value);
        if (isNaN(year) || year < 2000) {
            toast("error", "Das Jahr muss eine Zahl größer als 2000 sein");
            return false;
        }

        const splitDate = parse(splitDateInput.value, "d.M.y", new Date());
        if (isNaN(splitDate.getTime())) {
            toast("error", "Das Datum ist ungültig");
            return false;
        } else {
            if (
                splitDate.getFullYear() < year ||
                splitDate.getFullYear() > year + 1
            ) {
                toast(
                    "error",
                    `Das Datum muss zwischen ${year} und ${year + 1} liegen.`,
                );
                return false;
            }
            if (splitDate.getDay() !== 1) {
                toast(
                    "error",
                    "Das Datum muss ein Montag sein. Bitte überprüfen Sie ihre Eingabe.",
                );
                return false;
            }
        }

        const semester = parseInt(semesterInput.value);
        if (isNaN(semester) || semester < 1 || semester > 2) {
            toast("error", "Das Semester muss 1 oder 2 sein");
            return false;
        }

        if (fileInput?.files?.length === 0) {
            toast("error", "Bitte wählen Sie eine Datei aus");
            return false;
        }

        return true;
    }

    function setupYear() {
        const currYear = new Date().getFullYear();
        yearInput.value = currYear.toString();
    }

    async function submit(e: Event) {
        e.preventDefault();
        if (!validate()) return;

        const year = parseInt(yearInput.value);
        const splitDate = parse(splitDateInput.value, "d.M.y", new Date());
        const semester = parseInt(semesterInput.value);
        const file = (fileInput.files as FileList)[0];

        const data = {
            start_year: year,
            semester: semester,
            file: file,
            state: "uploaded",
            split: splitDate,
        };

        try {
            await pb.collection("years").create(data);
            window.location.href = `/admin/data/new2/?year=${year}&semester=${semester}&split_date=${formatDateToDDMMYYYY(splitDate)}`;
        } catch (e: any) {
            console.error(e);
            const yearStr = `${year}/${(year + 1).toString().substring(2)}`;
            toast(
                "error",
                `Fehler beim Erstellen des Halbjahresabschlusses für ${yearStr} ${semester}. Halbjahr. </br> Bitte überprüfen Sie ihre Eingabe.`,
            );
        }
    }

    document.addEventListener("DOMContentLoaded", setupYear);
    form.addEventListener("submit", validate);
    form.addEventListener("submit", submit);
</script>
